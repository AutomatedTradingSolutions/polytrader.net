DELIMITER ;

SHOW WARNINGS;

SET @_json_type_char_len = 64;

DELIMITER //

DROP FUNCTION IF EXISTS IsString//

CREATE FUNCTION IsString(_doc JSON) RETURNS TINYINT UNSIGNED
BEGIN
  DECLARE _type VARCHAR(64) DEFAULT UPPER(JSON_TYPE(_doc));
  RETURN IF(_type LIKE '%STRING%' OR _type LIKE '%CHAR%' OR _type LIKE '%TEXT%', 1, 0);
END//

DROP FUNCTION IF EXISTS IsNumber//

CREATE FUNCTION IsNumber(_doc JSON) RETURNS TINYINT UNSIGNED
BEGIN
  DECLARE _type VARCHAR(64) DEFAULT UPPER(JSON_TYPE(_doc));
  RETURN IF(_type LIKE '%INT%' OR _type LIKE '%DOUBLE%' OR _type LIKE '%FLOAT%' OR _type LIKE '%DECIMAL%', 1, 0);
END//

DROP FUNCTION IF EXISTS IsStringOrNumber//

CREATE FUNCTION IsStringOrNumber(_doc JSON) RETURNS TINYINT UNSIGNED
BEGIN
  RETURN IF(IsString(_doc) OR IsNumber(_doc), 1, 0);
END//

DROP FUNCTION IF EXISTS IsQuoted//

CREATE FUNCTION IsQuoted(_doc JSON) RETURNS TINYINT UNSIGNED
BEGIN
  RETURN IF(IsString(_doc) AND CHAR_LENGTH(CAST(_doc AS CHAR)) <> CHAR_LENGTH(JSON_UNQUOTE(_doc)), 1, 0);
END//

DROP FUNCTION IF EXISTS IsArray//

CREATE FUNCTION IsArray(_doc JSON) RETURNS TINYINT UNSIGNED
BEGIN
  RETURN IF('ARRAY' = UPPER(JSON_TYPE(_doc)), 1, 0);
END//

DROP FUNCTION IF EXISTS IsObject//

CREATE FUNCTION IsObject(_doc JSON) RETURNS TINYINT UNSIGNED
BEGIN
  RETURN IF('OBJECT' = UPPER(JSON_TYPE(_doc)), 1, 0);
END//

DELIMITER ;
